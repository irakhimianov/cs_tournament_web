version: "3"

services:
  web:
    build: .
    container_name: "cs_web"
    env_file: .env
    restart: "always"
    expose:
      - "8000"
    volumes:
      - ./static:/opt/app/static
      - ./media:/opt/app/media
    depends_on:
      - redis
      - db

  db:
    image: "postgres:14"
    container_name: "cs_db"
    restart: "unless-stopped"
    env_file: .env
    environment:
      POSTGRES_DB: ${SQL_DATABASE}
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    expose:
      - ${SQL_PORT}

  redis:
    image: "redis:8.0.2-alpine"
    container_name: "cs_redis"
    restart: "always"
    expose:
      - ${REDIS_PORT}

  caddy:
    image: "caddy:2.7-alpine"
    container_name: "cs_caddy"
    env_file: .env
    environment:
      - "MY_DOMAIN=${MY_DOMAIN}"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./Caddyfile:/etc/caddy/Caddyfile:ro"
      - "caddy-data:/data"
      - "caddy-config:/config"
      - type: volume
        source: media
        target: /usr/share/caddy/media
        read_only: true
        volume:
          nocopy: true
      - type: volume
        source: static
        target: /usr/share/caddy/static
        read_only: true
        volume:
          nocopy: true


volumes:
  static:
  media:
  pgdata:
  caddy-data:
  caddy-config:
